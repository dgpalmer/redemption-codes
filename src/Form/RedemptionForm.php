<?php

namespace Drupal\redemption_codes\Form;

use Drupal\Core\Entity\ContentEntityForm;
use Drupal\Core\Form\FormStateInterface;

/**
 * Form controller for Redemption edit forms.
 *
 * @ingroup redemption_codes
 */
class RedemptionForm extends ContentEntityForm {

  /**
   * {@inheritdoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state) {
    /* @var $entity \Drupal\redemption_codes\Entity\Redemption */
   $form = parent::buildForm($form, $form_state);

    $entity = $this->entity;

    return $form;
  }

  public function validateForm(array &$form, FormStateInterface $form_state)
  {
    $entity = parent::validateForm($form, $form_state); // TODO: Change the autogenerated stub

    $field = $entity->get('redemption_code_id');
    $id = current($field->getValue());
    $form_state->set('redemption_code_id', $id);

    return $entity;
  }

  public function submitForm(array &$form, FormStateInterface $form_state) {
    $id = $form_state->get('redemption_code_id');
    $this->entity = $this->buildEntity($form, $form_state);
    $this->entity->set('redemption_code_id', $id);
  }

  /**
   * {@inheritdoc}
   */
  public function save(array $form, FormStateInterface $form_state) {
    $entity = &$this->entity;


    $status = parent::save($form, $form_state);

    switch ($status) {
      case SAVED_NEW:
        drupal_set_message($this->t('Your code has been redeemed.', [
          '%label' => $entity->label(),
        ]));
        break;

      default:
        drupal_set_message($this->t('Saved the %id Redemption.', [
          '%id' => $entity->id(),
        ]));
    }
    $form_state->setRedirect('entity.redemption.add_form');
  }
}

